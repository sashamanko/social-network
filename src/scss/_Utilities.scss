/* Utilities
__________________________________________________ */

$utilities: (
  margin: (
    property: 'margin',
    prefix: 'm',
    values: (
      '0': 0,
      '1': var(--margin),
      '2': calc(var(--margin) / 2),
      '3': calc(var(--margin) / 3),
      '4': calc(var(--margin) / 4),
      '5': calc(var(--margin) / 6),
    )
  ),
  margin-top: (
    property: 'margin-top',
    prefix: 'mt',
    values: (
      '0': 0,
      '1': var(--margin),
      '2': calc(var(--margin) / 2),
      '3': calc(var(--margin) / 3),
      '4': calc(var(--margin) / 4),
      '5': calc(var(--margin) / 6),
      'auto': auto,
    )
  ),
  margin-right: (
    property: 'margin-right',
    prefix: 'mr',
    values: (
      '0': 0,
      '1': var(--margin),
      '2': calc(var(--margin) / 2),
      '3': calc(var(--margin) / 3),
      '4': calc(var(--margin) / 4),
      '5': calc(var(--margin) / 6),
      'auto': auto,
    )
  ),
  margin-bottom: (
    property: 'margin-bottom',
    prefix: 'mb',
    values: (
      '0': 0,
      '1': var(--margin),
      '2': calc(var(--margin) / 2),
      '3': calc(var(--margin) / 3),
      '4': calc(var(--margin) / 4),
      '5': calc(var(--margin) / 6),
      'auto': auto,
    )
  ),
  margin-left: (
    property: 'margin-left',
    prefix: 'ml',
    values: (
      '0': 0,
      '1': var(--margin),
      '2': calc(var(--margin) / 2),
      '3': calc(var(--margin) / 3),
      '4': calc(var(--margin) / 4),
      '5': calc(var(--margin) / 6),
      'auto': auto,
    )
  ),
  margin-y: (
    property: ('margin-top', 'margin-bottom'),
    prefix: 'my',
    values: (
      '0': (0, 0),
      '1': (var(--margin), var(--margin)),
      '2': (calc(var(--margin) / 2), calc(var(--margin) / 2)),
      '3': (calc(var(--margin) / 3), calc(var(--margin) / 3)),
      '4': (calc(var(--margin) / 4), calc(var(--margin) / 4)),
      '5': (calc(var(--margin) / 6), calc(var(--margin) / 6)),
      'auto': (auto, auto),
    )
  ),
  margin-x: (
    property: ('margin-right', 'margin-left'),
    prefix: 'mx',
    values: (
      '0': (0, 0),
      '1': (var(--margin), var(--margin)),
      '2': (calc(var(--margin) / 2), calc(var(--margin) / 2)),
      '3': (calc(var(--margin) / 3), calc(var(--margin) / 3)),
      '4': (calc(var(--margin) / 4), calc(var(--margin) / 4)),
      '5': (calc(var(--margin) / 6), calc(var(--margin) / 6)),
      'auto': (auto, auto),
    )
  ),
  padding: (
    property: 'padding',
    prefix: 'p',
    values: (
      '0': 0,
      '1': var(--padding),
      '2': calc(var(--padding) / 2),
      '3': calc(var(--padding) / 3),
      '4': calc(var(--padding) / 4),
      '5': calc(var(--padding) / 6),
    )
  ),
  padding-top: (
    property: 'padding-top',
    prefix: 'pt',
    values: (
      '0': 0,
      '1': var(--padding),
      '2': calc(var(--padding) / 2),
      '3': calc(var(--padding) / 3),
      '4': calc(var(--padding) / 4),
      '5': calc(var(--padding) / 6),
      'auto': auto,
    )
  ),
  padding-right: (
    property: 'padding-right',
    prefix: 'pr',
    values: (
      '0': 0,
      '1': var(--padding),
      '2': calc(var(--padding) / 2),
      '3': calc(var(--padding) / 3),
      '4': calc(var(--padding) / 4),
      '5': calc(var(--padding) / 6),
      'auto': auto,
    )
  ),
  padding-bottom: (
    property: 'padding-bottom',
    prefix: 'pb',
    values: (
      '0': 0,
      '1': var(--padding),
      '2': calc(var(--padding) / 2),
      '3': calc(var(--padding) / 3),
      '4': calc(var(--padding) / 4),
      '5': calc(var(--padding) / 6),
      'auto': auto,
    )
  ),
  padding-left: (
    property: 'padding-left',
    prefix: 'pl',
    values: (
      '0': 0,
      '1': var(--padding),
      '2': calc(var(--padding) / 2),
      '3': calc(var(--padding) / 3),
      '4': calc(var(--padding) / 4),
      '5': calc(var(--padding) / 6),
      'auto': auto,
    )
  ),
  padding-y: (
    property: ('padding-top', 'padding-bottom'),
    prefix: 'py',
    values: (
      '0': (0, 0),
      '1': (var(--padding), var(--margin)),
      '2': (calc(var(--padding) / 2), calc(var(--margin) / 2)),
      '3': (calc(var(--padding) / 3), calc(var(--margin) / 3)),
      '4': (calc(var(--padding) / 4), calc(var(--margin) / 4)),
      '5': (calc(var(--padding) / 6), calc(var(--margin) / 6)),
      'auto': (auto, auto),
    )
  ),
  padding-x: (
    property: ('padding-right', 'padding-left'),
    prefix: 'px',
    values: (
      '0': (0, 0),
      '1': (var(--padding), var(--margin)),
      '2': (calc(var(--padding) / 2), calc(var(--margin) / 2)),
      '3': (calc(var(--padding) / 3), calc(var(--margin) / 3)),
      '4': (calc(var(--padding) / 4), calc(var(--margin) / 4)),
      '5': (calc(var(--padding) / 6), calc(var(--margin) / 6)),
      'auto': (auto, auto),
    )
  ),
  display: (
    property: 'display',
    prefix: '',
    values: (
      'flex': flex,
      'block': block,
    )
  ),
  flex-direction: (
    property: 'flex-direction',
    prefix: '',
    values: (
      "flex-col": column,
      "flex-col-reverse": column-reverse,
      "flex-row": row,
      "flex-row-reverse": row-reverse,
    )
  ),
  justify-content: (
    property: 'justify-content',
    prefix: '',
    values: (
      "justify-start": flex-start,
      "justify-center": center,
      "justify-end": flex-end,
      "justify-between": space-between,
      "justify-evenly": space-evenly,
      "justify-around": space-around,
    )
  ),
  align-items: (
    property: 'align-items',
    prefix: '',
    values: (
      "align-start": flex-start,
      "align-center": center,
      "align-end": flex-end,
      "align-baseline": baseline,
      "align-stretch": stretch,
    )
  ),
  flex-wrap: (
    property: 'flex-wrap',
    prefix: '',
    values: (
      "flex-wrap": wrap,
      "flex-wrap-reverse": wrap-reverse,
      "flex-nowrap": nowrap,
    )
  ),
  list-style: (
    property: 'list-style',
    prefix: 'ls',
    values: (
      'none': none,
    )
  ),
  background: (
    property: 'background',
    prefix: 'bg',
    values: (
      "block": var(--bg-block),
    )
  ),
  container: (
    property: ('max-width', 'width', 'margin-right', 'margin-left', 'padding-right', 'padding-left'),
    prefix: '',
    values: (
      'container': (breakpoint-get(xl), 100%, auto, auto, var(--padding), var(--padding))
    )
  ),
  block: (
    property: ('background', 'padding', 'border-radius', 'box-shadow' ),
    prefix: '',
    values: (
      'item-block': (var(--bg-block), var(--padding), var(--border-radius), var(--shadow))
    )
  ),
  width: (
    property: 'width',
    prefix: 'w',
    values: (
      '100': 100%,
      '75': 75%,
      '50': 50%,
      '25': 25%,
    )
  ),
  height: (
    property: 'height',
    prefix: 'h',
    values: (
      '100': 100vh,
      '50': 50vh,
    )
  ),
  text-align: (
    property: 'text-align',
    prefix: 'ta',
    values: (
      'left': left,
      'right': right,
      'center': center,
    )
  ),
  text-transform: (
    property: 'text-transform'
    values: (
      'uppercase': uppercase,
      'lowercase': lowercase,
      'capitalize': capitalize
    )
  ),
  text-decoration: (
    property: 'text-decoration'
    valuer: (
      'none': none,
      'underline': underline,
      'line-through': line-through,
    )
  ),
  font-weight: (
    property: 'font-weight',
    prefix: 'fw',
    values: (
      '100': 100
      '200': 200
      '300': 300
      '400': 400
      '500': 500
      '600': 600
      '700': 700
      '800': 800
      '900': 900
    )
  ),
  font-size: (
    property: 'font-size',
    prefix: 'fz',
    values: (
      'base': 18px,
      'xs': x-small,
      's': small,
      'm': medium,
      'l': large,
      'xl': x-large,
    )
  ),
  border-radius: (
    property: 'border-radius',
    values: (
      'circle': 50%,
      '10': 10px,
      '12': 12px,
      '14': 14px,
      '16': 16px,
      '18': 18px,
      '20': 20px,
    )
  ),
  border-width: (
    property: 'border-width',
    values: (
      'thin': thin,
      'thick': thick,
      'medium': medium,
    )
  )
);





@each $none, $map in $utilities {
  $property: map-get($map, 'property');
  $prefix: map-get($map, 'prefix');
  $values: map-get($map, 'values');

  @each $k, $v in $values {

    @if ($k == 'default') {
      .#{$prefix} {
        #{$property}: #{$v};
      }  
    } @else if (type-of($property) == 'list' and $prefix != '') {
      $i: 1;
      .#{$prefix}-#{$k} {
        @each $var in $property {
          #{$var}: #{nth($v, $i)};
          $i: $i + 1;
        }  
      }
    } @else if (type-of($property) == 'list' and $prefix == '') {
      $i: 1;
      .#{$k} {
        @each $var in $property {
          #{$var}: #{nth($v, $i)};
          $i: $i + 1;
        }  
      }
    } @else if ($prefix == '') {
      .#{$k} {
        #{$property}: #{$v};
      }
    } @else {
      .#{$prefix}-#{$k} {
        #{$property}: #{$v};
      }
    }
  }
}