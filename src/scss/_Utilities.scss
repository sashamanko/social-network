/* Utilities
__________________________________________________ */

$utilities: (
  margin: (
    property: 'margin',
    prefix: 'm',
    values: (
      '0': 0,
      '1': var(--margin),
      '2': calc(var(--margin) / 2),
      '3': calc(var(--margin) / 3),
      '4': calc(var(--margin) / 4),
      '5': calc(var(--margin) / 6),
    )
  ),
  margin-top: (
    property: 'margin-top',
    prefix: 'mt',
    values: (
      '0': 0,
      '1': var(--margin),
      '2': calc(var(--margin) / 2),
      '3': calc(var(--margin) / 3),
      '4': calc(var(--margin) / 4),
      '5': calc(var(--margin) / 6),
      'auto': auto,
    )
  ),
  margin-right: (
    property: 'margin-right',
    prefix: 'mr',
    values: (
      '0': 0,
      '1': var(--margin),
      '2': calc(var(--margin) / 2),
      '3': calc(var(--margin) / 3),
      '4': calc(var(--margin) / 4),
      '5': calc(var(--margin) / 6),
      'auto': auto,
    )
  ),
  margin-bottom: (
    property: 'margin-bottom',
    prefix: 'mb',
    values: (
      '0': 0,
      '1': var(--margin),
      '2': calc(var(--margin) / 2),
      '3': calc(var(--margin) / 3),
      '4': calc(var(--margin) / 4),
      '5': calc(var(--margin) / 6),
      'auto': auto,
    )
  ),
  margin-left: (
    property: 'margin-left',
    prefix: 'ml',
    values: (
      '0': 0,
      '1': var(--margin),
      '2': calc(var(--margin) / 2),
      '3': calc(var(--margin) / 3),
      '4': calc(var(--margin) / 4),
      '5': calc(var(--margin) / 6),
      'auto': auto,
    )
  ),
  margin-y: (
    property: ('margin-top', 'margin-bottom'),
    prefix: 'my',
    values: (
      '0': (0, 0),
      '1': (var(--margin), var(--margin)),
      '2': (calc(var(--margin) / 2), calc(var(--margin) / 2)),
      '3': (calc(var(--margin) / 3), calc(var(--margin) / 3)),
      '4': (calc(var(--margin) / 4), calc(var(--margin) / 4)),
      '5': (calc(var(--margin) / 6), calc(var(--margin) / 6)),
      'auto': (auto, auto),
    )
  ),
  margin-x: (
    property: ('margin-right', 'margin-left'),
    prefix: 'mx',
    values: (
      '0': (0, 0),
      '1': (var(--margin), var(--margin)),
      '2': (calc(var(--margin) / 2), calc(var(--margin) / 2)),
      '3': (calc(var(--margin) / 3), calc(var(--margin) / 3)),
      '4': (calc(var(--margin) / 4), calc(var(--margin) / 4)),
      '5': (calc(var(--margin) / 6), calc(var(--margin) / 6)),
      'auto': (auto, auto),
    )
  ),
  padding: (
    property: 'padding',
    prefix: 'p',
    values: (
      '0': 0,
      '1': var(--padding),
      '2': calc(var(--padding) / 2),
      '3': calc(var(--padding) / 3),
      '4': calc(var(--padding) / 4),
      '5': calc(var(--padding) / 6),
    )
  ),
  padding-top: (
    property: 'padding-top',
    prefix: 'pt',
    values: (
      '0': 0,
      '1': var(--padding),
      '2': calc(var(--padding) / 2),
      '3': calc(var(--padding) / 3),
      '4': calc(var(--padding) / 4),
      '5': calc(var(--padding) / 6),
      'auto': auto,
    )
  ),
  padding-right: (
    property: 'padding-right',
    prefix: 'pr',
    values: (
      '0': 0,
      '1': var(--padding),
      '2': calc(var(--padding) / 2),
      '3': calc(var(--padding) / 3),
      '4': calc(var(--padding) / 4),
      '5': calc(var(--padding) / 6),
      'auto': auto,
    )
  ),
  padding-bottom: (
    property: 'padding-bottom',
    prefix: 'pb',
    values: (
      '0': 0,
      '1': var(--padding),
      '2': calc(var(--padding) / 2),
      '3': calc(var(--padding) / 3),
      '4': calc(var(--padding) / 4),
      '5': calc(var(--padding) / 6),
      'auto': auto,
    )
  ),
  padding-left: (
    property: 'padding-left',
    prefix: 'pl',
    values: (
      '0': 0,
      '1': var(--padding),
      '2': calc(var(--padding) / 2),
      '3': calc(var(--padding) / 3),
      '4': calc(var(--padding) / 4),
      '5': calc(var(--padding) / 6),
      'auto': auto,
    )
  ),
  padding-y: (
    property: ('padding-top', 'padding-bottom'),
    prefix: 'py',
    values: (
      '0': (0, 0),
      '1': (var(--padding), var(--margin)),
      '2': (calc(var(--padding) / 2), calc(var(--margin) / 2)),
      '3': (calc(var(--padding) / 3), calc(var(--margin) / 3)),
      '4': (calc(var(--padding) / 4), calc(var(--margin) / 4)),
      '5': (calc(var(--padding) / 6), calc(var(--margin) / 6)),
      'auto': (auto, auto),
    )
  ),
  padding-x: (
    property: ('padding-right', 'padding-left'),
    prefix: 'px',
    values: (
      '0': (0, 0),
      '1': (var(--padding), var(--margin)),
      '2': (calc(var(--padding) / 2), calc(var(--margin) / 2)),
      '3': (calc(var(--padding) / 3), calc(var(--margin) / 3)),
      '4': (calc(var(--padding) / 4), calc(var(--margin) / 4)),
      '5': (calc(var(--padding) / 6), calc(var(--margin) / 6)),
      'auto': (auto, auto),
    )
  ),
  display: (
    property: 'display',
    prefix: '',
    values: (
      'block': block,
      'flex': flex,
    )
  ),
  position: (
    property: 'position',
    prefix: '',
    values: (
      'relative': relative,
      'absolute': absolute,
      'fixed': fixed,
    )
  ),
  flex-direction: (
    property: 'flex-direction',
    prefix: '',
    values: (
      "flex-col": column,
      "flex-col-reverse": column-reverse,
      "flex-row": row,
      "flex-row-reverse": row-reverse,
    )
  ),
  justify-content: (
    property: 'justify-content',
    prefix: '',
    values: (
      "justify-start": flex-start,
      "justify-center": center,
      "justify-end": flex-end,
      "justify-between": space-between,
      "justify-evenly": space-evenly,
      "justify-around": space-around,
    )
  ),
  align-items: (
    property: 'align-items',
    prefix: '',
    values: (
      "align-start": flex-start,
      "align-center": center,
      "align-end": flex-end,
      "align-baseline": baseline,
      "align-stretch": stretch,
      "self-end": self-end,
    )
  ),
  flex-wrap: (
    property: 'flex-wrap',
    prefix: '',
    values: (
      "flex-wrap": wrap,
      "flex-wrap-reverse": wrap-reverse,
      "flex-nowrap": nowrap,
    )
  ),
  list-style: (
    property: 'list-style',
    prefix: 'list',
    values: (
      'none': none,
    )
  ),
  background: (
    property: 'background',
    prefix: 'bg',
    values: (
      "block": var(--bg-block),
    )
  ),
  container: (
    property: ('max-width', 'width', 'margin-right', 'margin-left', 'padding-right', 'padding-left'),
    prefix: '',
    values: (
      'container': (breakpoint-get(xl), 100%, auto, auto, var(--padding), var(--padding))
    )
  ),
  block: (
    property: ('background', 'padding', 'border-radius', 'box-shadow' ),
    prefix: '',
    values: (
      'item-block': (var(--bg-block), var(--padding), var(--border-radius), var(--shadow))
    )
  ),
  width: (
    property: 'width',
    prefix: 'w',
    values: (
      '5': 5%,
      '10': 10%,
      '15': 15%,
      '20': 20%,
      '25': 25%,
      '30': 30%,
      '35': 35%,
      '40': 40%,
      '45': 45%,
      '50': 50%,
      '55': 55%,
      '60': 60%,
      '65': 65%,
      '70': 70%,
      '75': 75%,
      '80': 80%,
      '85': 85%,
      '90': 90%,
      '95': 95%,
      '100': 100%,
    )
  ),
  height: (
    property: 'height',
    prefix: 'h',
    values: (
      '100': 100vh,
      '50': 50vh,
      '25': 25vh,
    )
  ),
  text-align: (
    property: 'text-align',
    prefix: 'text',
    values: (
      'left': left,
      'center': center,
      'right': right,
    )
  ),
  text-transform: (
    property: 'text-transform',
    prefix: '',
    values: (
      'uppercase': uppercase,
      'lowercase': lowercase,
      'capitalize': capitalize,
      'normal-case': none,
    )
  ),
  text-decoration: (
    property: 'text-decoration',
    prefix: '',
    values: (
      'underline': underline,
      'overline': overline,
      'line-through': line-through,
      'no-underline': none,
    )
  ),
  font-weight: (
    property: 'font-weight', 
    prefix: 'font',
    values: (
      '100': 100,
      '200': 200,
      '300': 300,
      '400': 400,
      '500': 500,
      '600': 600,
      '700': 700,
      '800': 800,
      '900': 900,
    )
  ),
  font-size: (
    property: 'font-size',
    prefix: 'font',
    values: (
      'xs': 12px,
      'sm': 14px,
      'lg': 14px,
      'base': var(--font-size),
      'xl': 20px,
    )
  ),
  border-radius: (
    property: 'border-radius',
    prefix: 'rounded',
    values: (
      'none': 0px,
      'sm': 1px,
      'md': 2px,
      'ld': 3px,
      'xl': 4px,
      '2xl': 5px,
      '3xl': 6px,
      'default': 10px,
      'fill': 99999px,
    )
  ),
  border-width: (
    property: 'border-width',
    prefix: 'border',
    values: (
      '0': 0px,
      'default': 1px,
      '2': 2px,
      '3': 3px,
      '4': 4px,
      '5': 5px,
      '6': 6px,
    )
  )
);





@each $none, $map in $utilities {
  $property: map-get($map, 'property');
  $prefix: map-get($map, 'prefix');
  $values: map-get($map, 'values');

  @each $k, $v in $values {

    @if ($k == 'default') {
      .#{$prefix} {
        #{$property}: #{$v};
      }  
    } @else if (type-of($property) == 'list' and $prefix != '') {
      $i: 1;
      .#{$prefix}-#{$k} {
        @each $var in $property {
          #{$var}: #{nth($v, $i)};
          $i: $i + 1;
        }  
      }
    } @else if (type-of($property) == 'list' and $prefix == '') {
      $i: 1;
      .#{$k} {
        @each $var in $property {
          #{$var}: #{nth($v, $i)};
          $i: $i + 1;
        }  
      }
    } @else if ($prefix == '') {
      .#{$k} {
        #{$property}: #{$v};
      }
    } @else {
      .#{$prefix}-#{$k} {
        #{$property}: #{$v};
      }
    }
  }
}